# Auto-generated by Glade# Code Generator
# http://eric.extremeboredom.net/projects/gladesharpcodegenerator/
namespace Estelle.UI 
import Gtk

public callable EntryVerifyHandler(text as string) as bool

public class entryDialog:
	// Private Variables
	thisWindow as Gtk.Window
	
	[Glade.Widget()]
	prompt as Gtk.Label
	
	[Glade.Widget()]
	entry as Gtk.Entry

	[Glade.Widget()]
	ok as Gtk.Button

	ok_pressed as bool = false
	win_destroyed as bool = false
	entry_handler as EntryVerifyHandler = null
	text as string = null

	// Private methods 
	def constructor(EntryHandler as EntryVerifyHandler):
		entry_handler = EntryHandler;
		glade as Glade.XML = Glade.XML("gui.glade", "entryDialog")
		print "Glade is Null!" if glade == null
		glade.Autoconnect(self)
		thisWindow = cast(Gtk.Window, glade.GetWidget("entryDialog"))
	
	def destroy():
		win_destroyed = true
		thisWindow.Destroy()
		Application.Quit()
	
	def Show():
		thisWindow.Show()
		on_entry_changed(self, null)
	
	// Event Handlers
	def on_cancel_released(sender as object, e as System.EventArgs):
		destroy()

	def on_ok_released(sender as object, e as System.EventArgs):
		ok_pressed = true
		text = entry.Text
		destroy()
	
	def on_entry_changed(sender as object, e as System.EventArgs):
		return if entry_handler == null
		ok.Sensitive = entry_handler(entry.Text)

	/*
	 * Public Methods
	 */

	// This method prompts the user to enter some text and returns it to the caller, or null if
	// the user pressed cancel. Text is not i18n processed by this method. The validator function
	// allows the caller to verify whether the string is valid input; the sensitivity of the Ok
	// button will be set accordingly. 
	public static def PromptForEntry(Title as string,		// The title of the dialog box
					 PrimaryText as string,		// The primary information in the prompt 
					 SecondaryText as string,	// Additional information about the prompt
				 	 InitialEntry as string,	// Initial contents of entry box; can be null
				  	 ValidatorFunc as EntryVerifyHandler) as string:  // See above; can be null

		// Set some random things
		d = entryDialog(ValidatorFunc)
		d.prompt.Markup = "<span size='xx-large'>{0}</span>\n\n{1}" % (PrimaryText, SecondaryText)
		d.thisWindow.Title = Title
		d.thisWindow.Modal = true
		d.Show()
		d.thisWindow.Present()
		Application.Run()

		return null unless d.ok_pressed
		return d.text
